---
title: "R Notebook"
output: html_notebook
---


### Load Required Packages
```{r}
library(tidyverse)
library(lavaan)
library(MplusAutomation)
#library(knitr)
#library(kableExtra)
```


### Read Data
Read a data file `ex3.9.dat` from Mplus examples. {r rnorm(5)}
```{r}
dat02 <- read.table("ex3.9.dat")
colnames(dat02) <- c("y", "x1", "x2")
```

### Regression Model to Run
The multiple regression to be analyzed can be expressed as a path diagram as follows.

![Figure 1. Model to Run](figures/Regression01.png){width=250}

One approach to insert an image from outside of R, generate a grahic file by an external software. For example on Powerpoint, select the image and save it as an image file in the project directory. In this case, an image file `Regression01.png` was created. Then, following command line was added to the text (not in the code chunck). There are many other ways to insert an image on R Markdown.  [^1].

[^1]: For more information how to insert external images, see resources available on the Internet.

Try svg format.  
![Figure 1. Model to Run](figures/figure03.svg){width=400}  

```{r better-case, fig.height = 1.5}
library(DiagrammeR)
grViz("
digraph rmarkdown {
node [shape = box]
x1; x2
node [shape = circle]
y
x1 -> y;
x2 -> y;
}
", height=150)
```

```{r}
grViz("
digraph SEM {

graph [layout = neato,
       overlap = true,
       outputorder = edgesfirst]

node [shape = rectangle]

a [pos = '-4,1!', label = 'e1', shape = circle]
b [pos = '-3,1!', label = 'ind_1']
c [pos = '-3,0!', label = 'ind_2']
d [pos = '-3,-1!', label = 'ind_3']
e [pos = '-1,0!', label = 'latent a', shape = ellipse]
f [pos = '1,0!', label = 'latent b', shape = ellipse]
g [pos = '1,1!', label = 'e6', shape = circle]
h [pos = '3,1!', label = 'ind_4']
i [pos = '3,-1!', label = 'ind_5']
j [pos = '4,1!', label = 'e4', shape = circle]
k [pos = '4,-1!', label = 'e5', shape = circle]

a->b
e->b [label = '0.6']
e->c [label = '0.6']
e->d [label = '0.6']

e->f [label = '0.321', headport = 'w']
g->f [tailport = 's', headport = 'n']

d->c [dir = both]


f->h [label = '0.6', tailport = 'ne', headport = 'w']
f->i [label = '0.6']

j->h
k->i

}      
")
```

### Run lavaan
```{r}
mod01 <- 'y ~ 1 + x1 + x2'
fit01 <- sem(mod01, data=dat02)
summary(fit01)
```

### Run MplusAutomation
```{r}
RegByMA00 <- mplusObject(
  MODEL = "y on x1 x2;",
  rdata = dat02)
fitMA00 <- mplusModeler(RegByMA00,
                        modelout="regByMA01.inp",
                        run = T)
fitMA00$results$parameters
```

The parameter output by `fitMA00$results$parameters` generates data frame. Data frame can be easily put on nice looking HTML table by `kable` command.
```{r}
fitMA00$results$parameters %>% 
  knitr::kable(format = "html") %>% 
  kableExtra::kable_styling(bootstrap_options="striped", full_width=F)
```
